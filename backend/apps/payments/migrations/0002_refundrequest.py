# Generated by Django 4.2.8 on 2025-06-19 23:08

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("bookings", "0003_remove_booking_vehicle_make_model_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("payments", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="RefundRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "request_id",
                    models.CharField(
                        db_index=True,
                        help_text="Internal request identifier",
                        max_length=20,
                        unique=True,
                        verbose_name="request ID",
                    ),
                ),
                (
                    "requested_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Requested refund amount",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="requested amount",
                    ),
                ),
                (
                    "approved_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Admin approved refund amount",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="approved amount",
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        choices=[
                            ("cancelled_by_user", "Cancelled by User"),
                            ("cancelled_by_host", "Cancelled by Host"),
                            ("no_show", "No Show"),
                            ("space_unavailable", "Space Unavailable"),
                            ("emergency", "Emergency"),
                            ("weather", "Weather Related"),
                            ("payment_issue", "Payment Issue"),
                            ("dispute", "Dispute"),
                            ("other", "Other"),
                        ],
                        help_text="Reason for refund request",
                        max_length=50,
                        verbose_name="reason",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("processed", "Processed"),
                        ],
                        default="pending",
                        help_text="Current request status",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "user_notes",
                    models.TextField(
                        blank=True,
                        help_text="Notes from the user requesting refund",
                        verbose_name="user notes",
                    ),
                ),
                (
                    "admin_notes",
                    models.TextField(
                        blank=True,
                        help_text="Internal admin notes",
                        verbose_name="admin notes",
                    ),
                ),
                (
                    "rejection_reason",
                    models.TextField(
                        blank=True,
                        help_text="Reason for rejection if denied",
                        verbose_name="rejection reason",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "reviewed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the request was reviewed",
                        null=True,
                        verbose_name="reviewed at",
                    ),
                ),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the refund was processed",
                        null=True,
                        verbose_name="processed at",
                    ),
                ),
                (
                    "booking",
                    models.ForeignKey(
                        help_text="Booking for which refund is requested",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="refund_requests",
                        to="bookings.booking",
                    ),
                ),
                (
                    "payment",
                    models.ForeignKey(
                        help_text="Payment to be refunded",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="refund_requests",
                        to="payments.payment",
                    ),
                ),
                (
                    "refund",
                    models.OneToOneField(
                        blank=True,
                        help_text="Associated refund after processing",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="refund_request",
                        to="payments.refund",
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        help_text="User who requested the refund",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requested_refunds",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Admin who reviewed the request",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_refunds",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Refund Request",
                "verbose_name_plural": "Refund Requests",
                "db_table": "refund_requests",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status", "created_at"],
                        name="refund_requ_status_6c2c6c_idx",
                    ),
                    models.Index(
                        fields=["requested_by"], name="refund_requ_request_855148_idx"
                    ),
                    models.Index(
                        fields=["booking"], name="refund_requ_booking_37e909_idx"
                    ),
                    models.Index(
                        fields=["payment"], name="refund_requ_payment_c53455_idx"
                    ),
                ],
            },
        ),
    ]
