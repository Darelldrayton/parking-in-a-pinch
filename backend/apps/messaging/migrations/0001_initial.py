# Generated by Django 4.2.8 on 2025-06-06 12:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("listings", "0001_initial"),
        ("bookings", "0002_remove_booking_payment"),
    ]

    operations = [
        migrations.CreateModel(
            name="Conversation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "conversation_id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        help_text="Unique identifier for the conversation",
                        unique=True,
                        verbose_name="conversation ID",
                    ),
                ),
                (
                    "conversation_type",
                    models.CharField(
                        choices=[
                            ("direct", "Direct Message"),
                            ("booking", "Booking Related"),
                            ("inquiry", "Listing Inquiry"),
                            ("support", "Customer Support"),
                        ],
                        default="direct",
                        help_text="Type of conversation",
                        max_length=20,
                        verbose_name="conversation type",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("archived", "Archived"),
                            ("blocked", "Blocked"),
                            ("deleted", "Deleted"),
                        ],
                        default="active",
                        help_text="Current status of the conversation",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Optional title for the conversation",
                        max_length=200,
                        verbose_name="title",
                    ),
                ),
                (
                    "is_group",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is a group conversation",
                        verbose_name="is group conversation",
                    ),
                ),
                (
                    "is_encrypted",
                    models.BooleanField(
                        default=True,
                        help_text="Whether messages in this conversation are encrypted",
                        verbose_name="is encrypted",
                    ),
                ),
                (
                    "auto_delete_after_days",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Number of days after which to auto-delete old messages",
                        null=True,
                        verbose_name="auto delete after days",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "last_activity_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Last time there was activity in this conversation",
                        verbose_name="last activity at",
                    ),
                ),
                (
                    "booking",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related booking if conversation is booking-related",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversations",
                        to="bookings.booking",
                    ),
                ),
                (
                    "listing",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related listing if conversation is about a listing",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversations",
                        to="listings.parkinglisting",
                    ),
                ),
                (
                    "participants",
                    models.ManyToManyField(
                        help_text="Users participating in this conversation",
                        related_name="conversations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversation",
                "verbose_name_plural": "Conversations",
                "db_table": "conversations",
                "ordering": ["-last_activity_at"],
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "message_id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        help_text="Unique identifier for the message",
                        unique=True,
                        verbose_name="message ID",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Message content", verbose_name="content"
                    ),
                ),
                (
                    "encrypted_content",
                    models.TextField(
                        blank=True,
                        help_text="Encrypted version of the message content",
                        verbose_name="encrypted content",
                    ),
                ),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("image", "Image"),
                            ("file", "File"),
                            ("system", "System Message"),
                        ],
                        default="text",
                        help_text="Type of message",
                        max_length=20,
                        verbose_name="message type",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("read", "Read"),
                            ("failed", "Failed"),
                        ],
                        default="sent",
                        help_text="Delivery status of the message",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this message has been deleted",
                        verbose_name="is deleted",
                    ),
                ),
                (
                    "is_edited",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this message has been edited",
                        verbose_name="is edited",
                    ),
                ),
                (
                    "is_flagged",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this message has been flagged for review",
                        verbose_name="is flagged",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the message was delivered",
                        null=True,
                        verbose_name="delivered at",
                    ),
                ),
                (
                    "conversation",
                    models.ForeignKey(
                        help_text="Conversation this message belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="messaging.conversation",
                    ),
                ),
                (
                    "reply_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="Message this is a reply to",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="messaging.message",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        help_text="User who sent this message",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Message",
                "verbose_name_plural": "Messages",
                "db_table": "messages",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ConversationParticipant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_muted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether notifications are muted for this conversation",
                        verbose_name="is muted",
                    ),
                ),
                (
                    "is_archived",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this conversation is archived for the user",
                        verbose_name="is archived",
                    ),
                ),
                (
                    "is_blocked",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the user has blocked this conversation",
                        verbose_name="is blocked",
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True,
                        help_text="Send email notifications for new messages",
                        verbose_name="email notifications",
                    ),
                ),
                (
                    "push_notifications",
                    models.BooleanField(
                        default=True,
                        help_text="Send push notifications for new messages",
                        verbose_name="push notifications",
                    ),
                ),
                (
                    "joined_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="joined at"),
                ),
                (
                    "last_read_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Last time the user read messages in this conversation",
                        null=True,
                        verbose_name="last read at",
                    ),
                ),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participant_settings",
                        to="messaging.conversation",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversation_settings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversation Participant",
                "verbose_name_plural": "Conversation Participants",
                "db_table": "conversation_participants",
            },
        ),
        migrations.CreateModel(
            name="MessageReadStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="read at"),
                ),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="read_by",
                        to="messaging.message",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="read_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Message Read Status",
                "verbose_name_plural": "Message Read Statuses",
                "db_table": "message_read_status",
                "indexes": [
                    models.Index(
                        fields=["message"], name="message_rea_message_fbf655_idx"
                    ),
                    models.Index(
                        fields=["user"], name="message_rea_user_id_c2e798_idx"
                    ),
                    models.Index(
                        fields=["read_at"], name="message_rea_read_at_b1b93e_idx"
                    ),
                ],
                "unique_together": {("message", "user")},
            },
        ),
        migrations.CreateModel(
            name="MessageAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        help_text="Attached file",
                        upload_to="message_attachments/%Y/%m/%d/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=[
                                    "jpg",
                                    "jpeg",
                                    "png",
                                    "gif",
                                    "webp",
                                    "pdf",
                                    "doc",
                                    "docx",
                                    "txt",
                                    "rtf",
                                    "mp3",
                                    "wav",
                                    "mp4",
                                    "avi",
                                    "mov",
                                ]
                            )
                        ],
                        verbose_name="file",
                    ),
                ),
                (
                    "filename",
                    models.CharField(
                        help_text="Original filename",
                        max_length=255,
                        verbose_name="filename",
                    ),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        help_text="File size in bytes", verbose_name="file size"
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        help_text="MIME type of the file",
                        max_length=100,
                        verbose_name="content type",
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(
                        blank=True,
                        help_text="Alt text for images (accessibility)",
                        max_length=200,
                        verbose_name="alt text",
                    ),
                ),
                (
                    "is_image",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this attachment is an image",
                        verbose_name="is image",
                    ),
                ),
                (
                    "is_scanned",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the file has been scanned for malware",
                        verbose_name="is scanned",
                    ),
                ),
                (
                    "scan_result",
                    models.CharField(
                        choices=[
                            ("clean", "Clean"),
                            ("infected", "Infected"),
                            ("suspicious", "Suspicious"),
                            ("pending", "Pending"),
                        ],
                        default="pending",
                        help_text="Result of malware scan",
                        max_length=20,
                        verbose_name="scan result",
                    ),
                ),
                (
                    "uploaded_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="uploaded at"),
                ),
                (
                    "message",
                    models.ForeignKey(
                        help_text="Message this attachment belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="messaging.message",
                    ),
                ),
            ],
            options={
                "verbose_name": "Message Attachment",
                "verbose_name_plural": "Message Attachments",
                "db_table": "message_attachments",
                "ordering": ["-uploaded_at"],
                "indexes": [
                    models.Index(
                        fields=["message"], name="message_att_message_2a1fa5_idx"
                    ),
                    models.Index(
                        fields=["is_image"], name="message_att_is_imag_9fcb03_idx"
                    ),
                    models.Index(
                        fields=["scan_result"], name="message_att_scan_re_35471c_idx"
                    ),
                    models.Index(
                        fields=["uploaded_at"], name="message_att_uploade_690065_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(
                fields=["message_id"], name="messages_message_83462e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(
                fields=["conversation", "-created_at"],
                name="messages_convers_38b855_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(fields=["sender"], name="messages_sender__6ae55a_idx"),
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(fields=["status"], name="messages_status_72d01d_idx"),
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(
                fields=["message_type"], name="messages_message_5af74b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(
                fields=["is_deleted"], name="messages_is_dele_54348c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="message",
            index=models.Index(
                fields=["created_at"], name="messages_created_919c58_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversationparticipant",
            index=models.Index(
                fields=["conversation"], name="conversatio_convers_d44fde_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversationparticipant",
            index=models.Index(fields=["user"], name="conversatio_user_id_4a2524_idx"),
        ),
        migrations.AddIndex(
            model_name="conversationparticipant",
            index=models.Index(
                fields=["is_archived"], name="conversatio_is_arch_3b285b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversationparticipant",
            index=models.Index(
                fields=["is_blocked"], name="conversatio_is_bloc_71c712_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversationparticipant",
            index=models.Index(
                fields=["last_read_at"], name="conversatio_last_re_421e10_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="conversationparticipant",
            unique_together={("conversation", "user")},
        ),
        migrations.AddIndex(
            model_name="conversation",
            index=models.Index(
                fields=["conversation_id"], name="conversatio_convers_144068_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversation",
            index=models.Index(
                fields=["conversation_type"], name="conversatio_convers_29a8ff_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversation",
            index=models.Index(fields=["status"], name="conversatio_status_742c74_idx"),
        ),
        migrations.AddIndex(
            model_name="conversation",
            index=models.Index(
                fields=["booking"], name="conversatio_booking_28c5c6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversation",
            index=models.Index(
                fields=["listing"], name="conversatio_listing_4a6340_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversation",
            index=models.Index(
                fields=["last_activity_at"], name="conversatio_last_ac_ab7506_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversation",
            index=models.Index(
                fields=["created_at"], name="conversatio_created_694913_idx"
            ),
        ),
    ]
